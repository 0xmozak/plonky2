name: Continuous Integration

on:
  merge_group: {}
  push:
    branches: [main]
  pull_request:
    branches:
      - "**"
  workflow_dispatch:
    branches:
      - "**"

jobs:  
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Get rust version
        run: echo "RUST_VERSION=$(cat rust-toolchain.toml | grep '^channel\s*=' | cut -d '=' -f2 | sed 's/"//g' | sed -e 's/^[ \t]*//')" >> $GITHUB_ENV
        shell: bash

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - uses: Swatinem/rust-cache@v2
        if: ${{ inputs.cache-key != '' }}
        with:
          prefix-key: ${{ inputs.cache-key }}
      
      - uses: Swatinem/rust-cache@v2
        if: ${{ inputs.cache-key == '' }}

      - name: Run cargo test
        run: cargo test --all
        env:
          RUSTFLAGS: -Copt-level=3 -Cdebug-assertions -Coverflow-checks=y -Cdebuginfo=0
          RUST_LOG: 1
          CARGO_INCREMENTAL: 1
          RUST_BACKTRACE: 1

  lints:
    name: Formatting and Clippy
    runs-on: ubuntu-latest
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Get rust version
        run: echo "RUST_VERSION=$(cat rust-toolchain.toml | grep '^channel\s*=' | cut -d '=' -f2 | sed 's/"//g' | sed -e 's/^[ \t]*//')" >> $GITHUB_ENV
        shell: bash

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v2
        if: ${{ inputs.cache-key != '' }}
        with:
          prefix-key: ${{ inputs.cache-key }}
      
      - name: Run cargo fmt
        run: cargo fmt --all -- --check
        env:
          CARGO_INCREMENTAL: 1

      - name: Run cargo clippy
        run: cargo clippy --all-features --all-targets -- -D warnings -A incomplete-features
        env:
          CARGO_INCREMENTAL: 1
